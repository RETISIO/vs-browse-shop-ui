
user  nginx;
worker_processes  auto;

worker_rlimit_nofile 100000;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  4000;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

#    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
#                      '$status $body_bytes_sent "$http_referer" '
#                      '"$http_user_agent" "$http_x_forwarded_for"';
    server_tokens off;

    log_format json_combined escape=json
    '{'
        '"timestamp":"$time_iso8601",'
        '"message":"$request",'
        '"severity":"INFO",'
        '"requestMethod":"$request_method",'
        '"requestUrl":"$scheme://$host$request_uri",'
        '"requestUri":"$uri",'
        '"requestSize":$request_length,'
        '"correlationId":"$http_correlationid",'
        '"status":"$status",'
        '"responseSize":$bytes_sent,'
        '"userAgent":"$http_user_agent",'
        '"x-forwarded-ip":"$http_x_forwarded_for",'
        '"referer":"$http_referer",'
        '"latency":${request_time},'
        '"backendLatency":"${upstream_response_time}"'
    '}';
	access_log  /var/log/nginx/access.log  json_combined;

    sendfile        on;
    #tcp_nopush     on;
    # send headers in one piece, it is better than sending them one by one
    tcp_nopush on;

    # don't buffer data sent, good for small data bursts in real time
    tcp_nodelay on;


    #gzip  on;
    # allow the server to close connection on non responding client, this will free up memory
    reset_timedout_connection on;

    # request timed out -- default 60
    client_body_timeout 10;

    # if client stop responding, free up memory -- default 60
    send_timeout 2;

    # server will close connection after this time -- default 75
    keepalive_timeout 60;


    # number of requests client can make over keep-alive -- for testing environment
    keepalive_requests 100000;

    # below header to avoid DDOS attack (always option to add proxy bypass request as well)
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always; 

    include /etc/nginx/conf.d/*.conf;
}
